spring.application.name=booking-service
server.port=8999
# spring.data.mongodb.auto-index-creation=true

#spring.data.mongodb.authentication-database=admin
#spring.data.mongodb.username=rootuser
#spring.data.mongodb.password=rootpass
spring.data.mongodb.uri=mongodb://root:secretpassword@hotel-mongodb.default.svc.cluster.local:27017/booking_DB?authSource=admin
# spring.data.mongodb.uri=mongodb+srv://project:1234@cluster0.76f0n.mongodb.net/booking-db?retryWrites=true&w=majority
#spring.data.mongodb.database=booking
#spring.data.mongodb.port=27017

subo8.app.jwtCookieName= subo8
subo8.app.jwtSecret= SecretKey!

## Kafka Configuration##
spring.kafka.bootstrap-servers=hotel-kafka-0.hotel-kafka-headless.default.svc.cluster.local:9092
spring.kafka.consumer.group-id= gid
spring.kafka.consumer.auto-offset-reset= earliest
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer= org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer= org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.properties.spring.json.trusted.packages=kafka
topic.value=testing

#DB sample property
#sample.datasource.url=jdbc:mysql://localhost/sample?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false
#sample.datasource.username=local-user
#sample.datasource.password=local-password
#
## DB DEV env property
#spring.config.activate.on-profile=dev
#spring.datasource.url=${sample.datasource.url}
#spring.datasource.username=${sample.datasource.username}
#spring.datasource.password=${sample.datasource.password}
#
## DB PRE-PROD env property
#spring.config.activate.on-profile=pre-prod
#spring.datasource.url=${sample.datasource.url}
#spring.datasource.username=${sample.datasource.username}
#spring.datasource.password=${sample.datasource.password}
#
### Hibernate Properties
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
#spring.jpa.generate-ddl=true
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#
## Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.defer-datasource-initialization=true
#spring.sql.init.mode=always